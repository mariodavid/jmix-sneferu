plugins {
    id 'io.jmix' version "1.2.0-M5"
    id 'java'
}
archivesBaseName = 'jmix-sneferu-tests'


apply plugin: 'org.springframework.boot'

jmix {
    bomVersion = '1.2.0-SNAPSHOT'
    projectId = 'petclinic'
}

dependencies {

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'



    testImplementation 'org.mockito:mockito-core:4.3.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'


    testImplementation 'org.assertj:assertj-core:3.22.0'

    implementation 'io.jmix.core:jmix-core-starter'
    implementation 'io.jmix.data:jmix-eclipselink-starter'
    implementation 'io.jmix.ui:jmix-ui-starter'
    implementation 'io.jmix.ui:jmix-ui-data-starter'
    implementation "io.jmix.ui:jmix-ui-export-starter"
    implementation 'io.jmix.ui:jmix-ui-widgets-compiled'
    implementation 'io.jmix.security:jmix-security-starter'
    implementation 'io.jmix.security:jmix-security-ui-starter'
    implementation 'io.jmix.security:jmix-security-data-starter'
    implementation 'io.jmix.localfs:jmix-localfs-starter'

    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'org.hsqldb:hsqldb'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    implementation "io.jmix.datatools:jmix-datatools-starter"
    implementation "io.jmix.datatools:jmix-datatools-ui-starter"
    implementation "io.jmix.translations:jmix-translations-de"
    implementation "io.jmix.translations:jmix-translations-zh-cn"
    implementation "io.jmix.translations:jmix-translations-ru"

    testImplementation 'org.assertj:assertj-core:3.11.1'
    testImplementation 'org.mockito:mockito-core:3.2.4'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.2.4'


    testImplementation 'io.jmix.ui:jmix-ui-test-assist'
}


test {
    useJUnitPlatform()
}